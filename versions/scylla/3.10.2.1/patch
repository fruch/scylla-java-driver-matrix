diff --git a/driver-core/src/test/java/com/datastax/driver/core/CCMBridge.java b/driver-core/src/test/java/com/datastax/driver/core/CCMBridge.java
index f890b3447..042dfdbad 100644
--- a/driver-core/src/test/java/com/datastax/driver/core/CCMBridge.java
+++ b/driver-core/src/test/java/com/datastax/driver/core/CCMBridge.java
@@ -172,13 +172,17 @@ public class CCMBridge implements CCMAccess {
     String installDirectory = System.getProperty("cassandra.directory");
     String branch = System.getProperty("cassandra.branch");
 
+    String inputScyllaVersion = System.getProperty("scylla.version");
+
     ImmutableSet.Builder<String> installArgs = ImmutableSet.builder();
     if (installDirectory != null && !installDirectory.trim().isEmpty()) {
       installArgs.add("--install-dir=" + new File(installDirectory).getAbsolutePath());
     } else if (branch != null && !branch.trim().isEmpty()) {
       installArgs.add("-v git:" + branch.trim().replaceAll("\"", ""));
     } else {
-      installArgs.add("-v " + inputCassandraVersion);
+      installArgs.add("--scylla");
+      installArgs.add("-v " + inputScyllaVersion);
+      installArgs.add("--id 0");
     }
 
     if (isDse()) {
@@ -628,7 +632,7 @@ public class CCMBridge implements CCMAccess {
     String remoteLogItf = ipOfNode(n) + ":" + TestUtils.findAvailablePort();
     execute(
         CCM_COMMAND
-            + " add node%d -d dc%s -i %s%d -t %s -l %s --binary-itf %s -j %d -r %s -s -b"
+            + " add node%d --scylla -d dc%s -i %s%d -t %s -l %s --binary-itf %s -j %d -r %s -s -b"
             + (isDSE ? " --dse" : ""),
         n,
         dc,
@@ -717,7 +721,7 @@ public class CCMBridge implements CCMAccess {
     final PrintWriter pw = new PrintWriter(sw);
     closer.register(pw);
     try {
-      logger.trace("Executing: " + fullCommand);
+      logger.warn("Executing: " + fullCommand);
       CommandLine cli = CommandLine.parse(fullCommand);
       Executor executor = new DefaultExecutor();
       LogOutputStream outStream =
@@ -879,6 +883,9 @@ public class CCMBridge implements CCMAccess {
       cassandraConfiguration.put("storage_port", RANDOM_PORT);
       cassandraConfiguration.put("rpc_port", RANDOM_PORT);
       cassandraConfiguration.put("native_transport_port", RANDOM_PORT);
+      cassandraConfiguration.put("api_port", RANDOM_PORT);
+      cassandraConfiguration.put("prometheus_port", RANDOM_PORT);
+      cassandraConfiguration.put("native_shard_aware_transport_port", RANDOM_PORT);
     }
 
     /**
diff --git a/driver-core/src/test/java/com/datastax/driver/core/ClusterStressTest.java b/driver-core/src/test/java/com/datastax/driver/core/ClusterStressTest.java
index e7a62993b..a315cf347 100644
--- a/driver-core/src/test/java/com/datastax/driver/core/ClusterStressTest.java
+++ b/driver-core/src/test/java/com/datastax/driver/core/ClusterStressTest.java
@@ -35,6 +35,7 @@ import org.slf4j.LoggerFactory;
 import org.testng.annotations.AfterMethod;
 import org.testng.annotations.Test;
 
+@CCMConfig(jvmArgs = {"--smp", "1"})
 public class ClusterStressTest extends CCMTestsSupport {
 
   private static final Logger logger = LoggerFactory.getLogger(ClusterStressTest.class);
diff --git a/driver-core/src/test/java/com/datastax/driver/core/PoolingOptionsIntegrationTest.java b/driver-core/src/test/java/com/datastax/driver/core/PoolingOptionsIntegrationTest.java
index 7dc809d81..f480e6868 100644
--- a/driver-core/src/test/java/com/datastax/driver/core/PoolingOptionsIntegrationTest.java
+++ b/driver-core/src/test/java/com/datastax/driver/core/PoolingOptionsIntegrationTest.java
@@ -28,7 +28,9 @@ import java.util.concurrent.TimeUnit;
 import org.testng.annotations.AfterMethod;
 import org.testng.annotations.Test;
 
-@CCMConfig(createSession = false)
+@CCMConfig(
+    createSession = false,
+    jvmArgs = {"--smp", "1"})
 public class PoolingOptionsIntegrationTest extends CCMTestsSupport {
 
   private ThreadPoolExecutor executor;
diff --git a/driver-core/src/test/java/com/datastax/driver/core/SessionLeakTest.java b/driver-core/src/test/java/com/datastax/driver/core/SessionLeakTest.java
index cc6940575..c6e15b562 100644
--- a/driver-core/src/test/java/com/datastax/driver/core/SessionLeakTest.java
+++ b/driver-core/src/test/java/com/datastax/driver/core/SessionLeakTest.java
@@ -20,6 +20,7 @@ import static com.datastax.driver.core.CreateCCM.TestMode.PER_METHOD;
 import static com.datastax.driver.core.TestUtils.nonDebouncingQueryOptions;
 import static com.google.common.collect.Lists.newArrayList;
 import static java.util.concurrent.TimeUnit.MINUTES;
+import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.fail;
 
 import com.datastax.driver.core.exceptions.InvalidQueryException;
@@ -28,7 +29,10 @@ import java.util.concurrent.TimeUnit;
 import org.testng.annotations.Test;
 
 @CreateCCM(PER_METHOD)
-@CCMConfig(dirtiesContext = true, createCluster = false)
+@CCMConfig(
+    dirtiesContext = true,
+    createCluster = false,
+    jvmArgs = {"--smp", "1"})
 public class SessionLeakTest extends CCMTestsSupport {
 
   SocketChannelMonitor channelMonitor;
diff --git a/pom.xml b/pom.xml
index 944e40986..deec3fa47 100644
--- a/pom.xml
+++ b/pom.xml
@@ -75,7 +75,7 @@
         <!-- more recent versions of pax-exam require JDK7+ -->
         <pax-exam.version>3.6.0</pax-exam.version>
         <url.version>2.4.0</url.version>
-        <testng.version>6.8.8</testng.version>
+        <testng.version>6.14.3</testng.version>
         <assertj.version>1.7.0</assertj.version>
         <mockito.version>1.10.8</mockito.version>
         <wiremock.version>2.25.0</wiremock.version>
@@ -728,7 +728,7 @@
                 <plugin>
                     <artifactId>maven-surefire-plugin</artifactId>
                     <!-- do not upgrade until https://issues.apache.org/jira/browse/SUREFIRE-1302 is fixed -->
-                    <version>2.18</version>
+                    <version>2.22.2</version>
                     <configuration>
                         <groups>${test.groups}</groups>
                         <useFile>false</useFile>
@@ -759,7 +759,7 @@
                 <plugin>
                     <artifactId>maven-failsafe-plugin</artifactId>
                     <!-- do not upgrade until https://issues.apache.org/jira/browse/SUREFIRE-1302 is fixed -->
-                    <version>2.18</version>
+                    <version>2.22.2</version>
                     <configuration>
                         <groups>${test.groups}</groups>
                         <useFile>false</useFile>
